{"version":3,"sources":["reportWebVitals.js","components/Country.jsx","components/Pagination.jsx","components/Countries.jsx","components/LatestProjection.jsx","components/CountryDaily.jsx","components/PaginationDaily.jsx","components/CountriesDaily.jsx","components/DailyProjection.jsx","components/CountryCompare.jsx","components/CountriesCompare.jsx","actions/compareDataActions.jsx","components/Compare.jsx","actions/covidDataActions.jsx","components/Search.jsx","components/Header.jsx","components/Map2.jsx","components/Home.jsx","actions/totalDataActions.jsx","components/NotFound.jsx","components/CountryDetails.jsx","components/CountryMap.jsx","routers/AppRouter.jsx","reducers/covidReducer.jsx","reducers/compareReducer.jsx","reducers/totalDataReducer.jsx","store/configureStore.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Country","props","className","country","deaths","critical","cases","recovered","to","Pagination","postPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","map","number","onClick","href","connect","state","countries","useState","currentPage","setCurrentPage","indexOfLastPost","indexOfFirstPost","currentCountries","slice","undefined","idx","length","pageNumber","LatestProjection","todayDeaths","todayCases","todayRecovered","PaginationDaily","CountryDaily","DailyProjection","CountryCompare","src","countryInfo","flag","alt","lat","long","continent","population","tests","deathsPerOneMillion","criticalPerOneMillion","recoveredPerOneMillion","testsPerOneMillion","oneDeathPerPeople","oneCasePerPeople","oneTestPerPeople","compareCountries","firstCompare","setFirstCompare","secondCompare","setSecondCompare","onSubmit","e","preventDefault","dispatch","doubleCountries","axios","request","method","url","response","data","type","countryComparison","catch","error","alert","multipleCountries","id","value","onChange","target","placeholder","compareCountry","Compare","getCountriesFromApi","forEach","setCountries","console","keyword","setKeyword","searchCountries","searchCountriesfromApi","Header","exact","activeClassName","Map","setTooltipContent","projectionConfig","scale","center","translateExtent","geography","geographies","geo","onMouseEnter","NAME","properties","onMouseLeave","style","default","fill","outline","hover","pressed","rsmKey","memo","totalDatas","useEffect","content","setContent","Map2","html","NotFound","find","match","params","history","position","MapContainer","zoom","scrollWheelZoom","TileLayer","attribution","Marker","Popup","AppRouter","path","component","Home","CountryDetails","CountryMap","covidReducer","action","compareReducer","totalDataReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebd4ef9a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Country = (props) => {\r\n    return (\r\n        <div className=\"col-md-4 col-sm-6 col-lg-4\">\r\n            <div className=\"card mt-3\">\r\n\r\n            <h3 className=\"card-header d-flex flex-row\"><span className=\"align-self-center\">{props.country}</span></h3>\r\n            <div className=\"card-body\">\r\n                <p className=\"d-flex flex-row\">Deaths: <span className=\"badge bg-danger p-2 ms-auto col-6\">{props.deaths}</span>   </p>\r\n                <p className=\"d-flex flex-row\">Critical: <span className=\"badge bg-warning text-dark ms-auto  col-6\">{props.critical}</span>   </p>\r\n                <p className=\"d-flex flex-row\">Confirmed cases: <span className=\"badge bg-secondary ms-auto  col-6\">{props.cases}</span>   </p>\r\n                <p className=\"d-flex flex-row\">recovered: <span className=\"badge bg-success ms-auto  col-6\" >{props.recovered}</span>   </p>\r\n            </div>\r\n\r\n            <div className=\"card-footer d-flex flex-row\">\r\n                <button className=\"btn btn-primary col-5 m-auto\"><Link to={`/latest/${props.country}`} className=\"text-white text-decoration-none\">See Details</Link></button>\r\n                <button className=\"btn btn-secondary col-5 m-auto\"><Link to={`/latest/map/${props.country}`} className=\"text-white text-decoration-none\">Map View</Link></button>\r\n            </div>\r\n\r\n\r\n            </div>\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Country\r\n","import React from 'react'\r\n\r\nexport const Pagination = ({postPerPage, totalPosts , paginate}) => {\r\n\r\n\r\n    const pageNumbers = []\r\n    for(let i = 1; i <= Math.ceil(totalPosts/postPerPage);i++){\r\n        pageNumbers.push(i)\r\n    }\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pageNumbers.map((number) => {\r\n                    return <li key={number} className=\"page-item\">\r\n                         <a onClick= {() => paginate(number)} href=\"/latest/#\" className=\"page-link\">\r\n                             {number}\r\n                         </a>\r\n                    </li>\r\n                })}\r\n            </ul>\r\n            \r\n        </nav>\r\n    )\r\n}\r\n","import React , {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Country from './Country';\r\nimport { Pagination } from './Pagination';\r\n\r\n\r\n\r\nconst Countries = (props) => {\r\n\r\n    const [currentPage,setCurrentPage] = useState(1)\r\n    const [postPerPage] = useState(9)\r\n    \r\n    const indexOfLastPost = currentPage*postPerPage;\r\n    const indexOfFirstPost = indexOfLastPost-postPerPage;\r\n    const currentCountries = props.countries.slice(indexOfFirstPost,indexOfLastPost)\r\n    \r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber)\r\n\r\n    return (\r\n        <div className=\"mt-3\">\r\n            <div className=\"row\">\r\n\r\n                {\r\n                   \r\n                    props.countries!==undefined?\r\n                    currentCountries.map((country ,idx)=>{\r\n                       return <Country key={idx} {...country}/>\r\n                    })\r\n                    :null\r\n                }\r\n \r\n            </div>\r\n            <div className=\"d-flex justify-content-center mt-3\">\r\n            <Pagination postPerPage={postPerPage} totalPosts={props.countries.length} paginate ={paginate}/>\r\n            </div>\r\n            \r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n   \r\nreturn {\r\n    \r\n    countries : state.countries}\r\n}\r\n export default connect(mapStateToProps)(Countries)\r\n","import React from 'react'\r\nimport Countries from './Countries'\r\n\r\nconst LatestProjection = () => {\r\n    return (\r\n        <div>\r\n            <Countries/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LatestProjection\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Country = (props) => {\r\n    return (\r\n        <div className=\"col-md-4 col-sm-6 col-lg-3\">\r\n            <div className=\"card mt-3\">\r\n\r\n            <h3 className=\"card-header\">{props.country}</h3>\r\n            <div className=\"card-body\">\r\n                <p className=\"d-flex flex-row\">Deaths: <span className=\"badge bg-danger p-2 ms-auto col-6\">{props.todayDeaths}</span>   </p>\r\n                <p className=\"d-flex flex-row\">Confirmed cases: <span className=\"badge bg-secondary ms-auto  col-6\">{props.todayCases}</span>   </p>\r\n                <p className=\"d-flex flex-row\">recovered: <span className=\"badge bg-success ms-auto  col-6\" >{props.todayRecovered}</span>   </p>\r\n            </div>\r\n\r\n            <div className=\"card-footer d-flex flex-row\">\r\n                <button className=\"btn btn-primary col-5 m-auto\"><Link to={`/latest/${props.country}`} className=\"text-white text-decoration-none\">See Details</Link></button>\r\n                <button className=\"btn btn-secondary col-5 m-auto\"><Link to={`/latest/map/${props.country}`} className=\"text-white text-decoration-none\">Map View</Link></button>\r\n            </div>\r\n\r\n\r\n            </div>\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Country\r\n","import React from 'react'\r\n\r\nexport const PaginationDaily = ({postPerPage, totalPosts , paginate}) => {\r\n\r\n\r\n    const pageNumbers = []\r\n    for(let i = 1; i <= Math.ceil(totalPosts/postPerPage);i++){\r\n        pageNumbers.push(i)\r\n    }\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pageNumbers.map((number) => {\r\n                    return <li key={number} className=\"page-item\">\r\n                         <a onClick= {() => paginate(number)} href=\"/daily/#\" className=\"page-link\">\r\n                             {number}\r\n                         </a>\r\n                    </li>\r\n                })}\r\n            </ul>\r\n            \r\n        </nav>\r\n    )\r\n}\r\n","import React , {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport CountryDaily from './CountryDaily';\r\nimport { PaginationDaily } from './PaginationDaily';\r\n\r\n\r\nconst CountriesDaily = (props) => {\r\n    \r\n    const [currentPage,setCurrentPage] = useState(1)\r\n    const [postPerPage] = useState(16)\r\n    \r\n    const indexOfLastPost = currentPage*postPerPage;\r\n    const indexOfFirstPost = indexOfLastPost-postPerPage;\r\n    const currentCountries = props.countries.slice(indexOfFirstPost,indexOfLastPost)\r\n    \r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber)\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"container mt-3\">\r\n            <div className=\"row\">\r\n\r\n                {\r\n                   \r\n                    props.countries!==undefined?\r\n                    currentCountries.map((country ,idx)=>{\r\n                       return <CountryDaily key={idx} {...country}/>\r\n                    })\r\n                    :null\r\n                }\r\n\r\n\r\n\r\n              \r\n            </div>\r\n            <div className=\"d-flex justify-content-center mt-3\">\r\n            <PaginationDaily postPerPage={postPerPage} totalPosts={props.countries.length} paginate ={paginate}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n   \r\nreturn {\r\n    \r\n    countries : state.countries}\r\n}\r\n export default connect(mapStateToProps)(CountriesDaily)\r\n","import React from 'react'\r\nimport CountriesDaily from './CountriesDaily';\r\n\r\nconst DailyProjection = () => {\r\n    return (\r\n        <div>\r\n            <CountriesDaily/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DailyProjection\r\n","import React from \"react\";\r\n\r\nconst CountryCompare = (props) => {\r\n \r\n\r\n\r\n\r\n  return (\r\n    <div className=\"col-6 mt-5\">\r\n      {props && (\r\n        <div className=\"col-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header d-flex align-items-center justify-content-center\">\r\n              <h2>{props.country}</h2>\r\n            </div>\r\n            <div className=\"card-body d-flex flex-column\">\r\n              <div className=\"align-self-center\">\r\n                <img\r\n                  src={props.countryInfo.flag}\r\n                  alt=\"flag\"\r\n                  className=\"thumbnail rounded card-image\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"container\">\r\n                <div className=\"mt-3 fw-light\">\r\n                  <h5>Country Info</h5>\r\n\r\n                  <p>Latitude: {props.countryInfo.lat}</p>\r\n                  <p>Longitude: {props.countryInfo.long}</p>\r\n                  <p>Continent: {props.continent}</p>\r\n                  <p>Population: {props.population}</p>\r\n                </div>\r\n                <div className=\"mt-3 fw-light\">\r\n                  <h5>Country Today Covid-19 Info</h5>\r\n                  <p>Deaths: {props.todayDeaths}</p>\r\n                  <p>Cases: {props.todayCases}</p>\r\n                  <p>Recovered: {props.todayRecovered}</p>\r\n                </div>\r\n                <div className=\"mt-3 fw-light\">\r\n                  <h5>Country Total Covid-19 Info</h5>\r\n                  <p>Deaths: {props.deaths}</p>\r\n                  <p>Critical: {props.critical}</p>\r\n                  <p>Recovered: {props.recovered}</p>\r\n                  <p>Tests: {props.tests}</p>\r\n                </div>\r\n                <div className=\"mt-3 fw-light\">\r\n                  <h5>Country Per 1 Mln Covid-19 Info</h5>\r\n                  <p>Deaths: {props.deathsPerOneMillion}</p>\r\n                  <p>Critical: {props.criticalPerOneMillion}</p>\r\n                  <p>Recovered: {props.recoveredPerOneMillion}</p>\r\n                  <p>Tests: {props.testsPerOneMillion}</p>\r\n                </div>\r\n                <div className=\"mt-3 fw-light\">\r\n                  <h5>Country 1 Per People Covid-19 Info</h5>\r\n                  <p>Deaths: {props.oneDeathPerPeople}</p>\r\n                  <p>Case: {props.oneCasePerPeople}</p>\r\n                  <p>Tests: {props.oneTestPerPeople}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryCompare;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { multipleCountries } from \"../actions/compareDataActions\";\r\nimport CountryCompare from \"./CountryCompare\";\r\nimport { clearCountryComparison } from \"./../actions/compareDataActions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst CountriesCompare = (props) => {\r\n  const [firstCompare, setFirstCompare] = useState(\"\");\r\n\r\n  const [secondCompare, setSecondCompare] = useState(\"\");\r\n\r\n  const onChangeFirst = (e) => {\r\n    setFirstCompare(e.target.value);\r\n  };\r\n  const onChangeSecond = (e) => {\r\n    setSecondCompare(e.target.value);\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (firstCompare && secondCompare) {\r\n      props.dispatch(multipleCountries(firstCompare, secondCompare));\r\n      setFirstCompare(\"\");\r\n      setSecondCompare(\"\");\r\n    } else {\r\n      alert(\"Please enter a country name to compare\");\r\n    }\r\n  };\r\n\r\n  const clearComparison = () => {\r\n    props.dispatch(clearCountryComparison());\r\n  };\r\n  \r\n \r\n \r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <div>\r\n        <h3 className=\"fs-3 fw-normal mt-5\">Compare Countries by total data</h3>\r\n        <form onSubmit={onSubmit} className=\"mt-3\">\r\n          <div className=\"d-flex flex-row justify-content-between\">\r\n            <input\r\n              id=\"compare 1\"\r\n              type=\"text\"\r\n              value={firstCompare}\r\n              onChange={onChangeFirst}\r\n              placeholder=\"Country 1\"\r\n              className=\"form-control m-2 \"\r\n            />\r\n            <input\r\n              id=\"compare 1\"\r\n              type=\"text\"\r\n              value={secondCompare}\r\n              onChange={onChangeSecond}\r\n              placeholder=\"Country 2\"\r\n              className=\"form-control m-2 \"\r\n            />\r\n          </div>\r\n          <div className=\"d-flex flex-row justify-content-center\">\r\n            <button\r\n              className=\"btn btn-secondary btn-md px-5 mt-3 \"\r\n              type=\"submit\"\r\n            >\r\n              Compare\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div className=\"d-flex flex-row justify-content-center \">\r\n          {\" \"}\r\n          <button\r\n            className=\"btn btn-danger btn-md px-5 mt-3 \"\r\n            onClick={clearComparison}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"container mt-3\">\r\n          <div className=\"d-grid\">\r\n            <div className=\"row\">\r\n            {props.compareCountries.map((compareCountry, idx) => {\r\n              return <CountryCompare key={idx} {...compareCountry} />;\r\n            })}\r\n            \r\n            </div>\r\n            \r\n              <Link to=\"/\" className=\"d-grid gap-2\"><button className=\"btn btn-primary mt-3 mb-5\">Go Back</button></Link>\r\n                \r\n              \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    compareCountries: state.compareCountries,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CountriesCompare);\r\n","import axios from \"axios\"\r\n\r\n\r\n\r\n\r\nexport const countryComparison = (compareCountries) => ({\r\n    type: \"COMPARE_COUNTRIES\",\r\n    compareCountries\r\n\r\n})\r\n\r\nexport const multipleCountries= (firstCompare,secondCompare) => {\r\n\r\n    const doubleCountries = `${firstCompare},${secondCompare}`\r\n\r\n    return(dispatch) =>{axios.request({\r\n        method: 'GET',\r\n        url: `https://corona.lmao.ninja/v2/countries/${doubleCountries}?yesterday=`,\r\n       \r\n      }).then (function (response) { \r\n        const compareCountries = []\r\n        compareCountries.push(response.data[0])\r\n        compareCountries.push(response.data[1])\r\n         \r\n          dispatch(countryComparison(compareCountries));\r\n    }).catch(function (error) {\r\n    alert(\"Country not found. \",error)\r\n    });} \r\n\r\n\r\n}\r\n\r\nexport const clearCountryComparison = () => ({\r\n  type: \"CLEAR_COUNTRIES\",\r\n  \r\n\r\n})","import React from 'react'\r\nimport CountriesCompare from './CountriesCompare'\r\n\r\n\r\nconst Compare = () => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <CountriesCompare/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Compare\r\n","\r\nimport axios from \"axios\"\r\n\r\n\r\n\r\nexport const setCountries =(countries) => ({\r\n    type: \"SET_COUNTRIES\",\r\n    countries\r\n\r\n})\r\n\r\nexport const getCountriesFromApi = () => {\r\n    return (dispatch) => {\r\n        return axios.request({\r\n            method: 'GET',\r\n            url: 'https://corona.lmao.ninja/v2/countries?yesterday=&sort=',\r\n           \r\n          }).then(function (response) {\r\n            \r\n            const countries = []\r\n            response.data.forEach((country) => { countries.push(country)})\r\n            \r\n            dispatch(setCountries(countries));\r\n\r\n          \r\n\r\n        }).catch(function (error) {\r\n            console.error(error);\r\n        });\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport const searchCountries =(countries) => ({\r\n    type: \"SEARCH_COUNTRIES\",\r\n    countries\r\n\r\n})\r\n\r\n\r\nexport const searchCountriesfromApi = (keyword) => {\r\n        return(dispatch) =>{axios.request({\r\n            method: 'GET',\r\n            url: `https://corona.lmao.ninja/v2/countries/${keyword}?yesterday=true&strict=true&${keyword}=`,\r\n           \r\n          }).then (function (response) { \r\n            const countries = []\r\n            countries.push(response.data)\r\n             \r\n              dispatch(searchCountries(countries));\r\n    }).catch(function (error) {\r\n        alert(\"Country not found. \")\r\n    });} \r\n\r\n}\r\n\r\n\r\n\r\n","import React,{ useState} from \"react\";\r\nimport \"@fortawesome/fontawesome-svg-core\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchCountriesfromApi , getCountriesFromApi} from \"../actions/covidDataActions\";\r\n\r\n\r\n\r\nconst Search = (props) => {\r\n\r\n\r\n\r\n  const[keyword,setKeyword] = useState(\"\")\r\n  \r\n  const onChange =(e) => {\r\n    setKeyword(e.target.value);\r\n    \r\n    \r\n  }\r\n\r\n  const onSubmit = (e)=> {\r\n      e.preventDefault();\r\n      if(!keyword){\r\n        props.dispatch(getCountriesFromApi())\r\n     \r\n        \r\n      }else{\r\n        props.dispatch(searchCountriesfromApi(keyword))\r\n      setKeyword(\"\")\r\n        \r\n      }\r\n     \r\n  }\r\n \r\n\r\n  \r\n\r\n  return (\r\n<form onSubmit={onSubmit}>\r\n      <div className=\"d-flex flex-row\">\r\n        \r\n          <input type=\"text\" value={keyword} onChange={onChange} className=\"form-control col-md-3 rounded-pill\" placeholder=\"Search\"  />\r\n        <div className=\"input-group-append\">\r\n          {/* <button type=\"submit\" className=\"btn btn-secondary\">\r\n            <i className=\"fas fa-search\"></i>\r\n          </button> */}\r\n        </div>\r\n        \r\n        \r\n      </div></form>\r\n    \r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    countries:state.countries\r\n  }\r\n}\r\n\r\nexport default connect (mapStateToProps)(Search) ;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Search from \"./Search\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"navbar d-flex  justify-content-center align-items-center sticky-sm-top bg-white\">\r\n      <h1 className=\"d-inline nav-item fs-2 me-auto\">\r\n        <NavLink exact to=\"/\" className=\"navbar-brand text-decoration-none text-dark\">\r\n          Covid 19 Viewer\r\n        </NavLink>\r\n      </h1>\r\n      \r\n      \r\n      <NavLink to=\"/latest\" activeClassName=\"active\" className=\"text-decoration-none  text-muted nav-item p-2 bd-highlight\">\r\n        Latest\r\n      </NavLink>\r\n      <NavLink to=\"/daily\" activeClassName=\"active\" className=\"text-decoration-none  text-muted nav-item p-2 bd-highlight\">\r\n        Daily\r\n      </NavLink>\r\n      <NavLink to=\"/compare\" activeClassName=\"active\" className=\"text-decoration-none text-muted nav-item p-2 bd-highlight\">\r\n        Compare\r\n      </NavLink>\r\n\r\n      <Search className=\"nav-item\"/>\r\n      \r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { memo } from \"react\";\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\n\r\n\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst Map = ({ setTooltipContent , countries}) => {\r\n  const mapWidth = 800;\r\n    const mapHeight = 600;\r\n  \r\n\r\n  return (\r\n      \r\n\r\n  \r\n    \r\n\r\n<ComposableMap data-tip=\"\" projectionConfig={{ scale: 160 , center: [0, 0], }}>\r\n        <ZoomableGroup \r\n        translateExtent={[[0, -mapHeight], [mapWidth, mapHeight]]}>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map(geo => (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  onMouseEnter={() => {\r\n                    const { NAME } = geo.properties;\r\n                    countries.forEach((country) => {\r\n                        if(country.country === NAME) {\r\n                            setTooltipContent(`\r\n                            <div>\r\n                            <p>${country.country}</p>\r\n                            <p>Total Death: ${country.deaths}</p>\r\n                            <p>Total Recovered: ${country.recovered}</p>\r\n                            </div>\r\n                            `)\r\n                        }\r\n                    })\r\n                    // setTooltipContent(`${NAME}`);\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                  }}\r\n                  \r\n                  style={{\r\n                    default: {\r\n                      fill: \"#D6D6DA\",\r\n                      outline: \"none\"\r\n                    },\r\n                    hover: {\r\n                      fill: \"#F53\",\r\n                      outline: \"none\"\r\n                    },\r\n                    pressed: {\r\n                      fill: \"#E42\",\r\n                      outline: \"none\"\r\n                    }\r\n                  }}\r\n                />\r\n              ))\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n    \r\n    \r\n  );\r\n};\r\n\r\nexport default memo(Map);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { totalDataFromApi } from \"../actions/totalDataActions\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Map2 from \"./Map2\";\r\n\r\n\r\nconst Home = (props) => {\r\n  useEffect(() => {\r\n    props.dispatch(totalDataFromApi());\r\n  }, [props]);\r\n\r\n  const [content, setContent] = useState(\"\");\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"\">\r\n        <div className=\"d-flex flex-column\">\r\n          <h2 className=\"fs-3 fw-normal mt-5 mx-auto\">\r\n            Global Covid-19 Viewer App\r\n          </h2>\r\n          <p className=\"mt-5 mx-auto\">\r\n            This site contains latest Covid-19 data from every country\r\n          </p>\r\n          <h4 className=\"text-muted mt-5 mx-auto mb-5 \">Yesterday's Due</h4>\r\n        </div>\r\n\r\n        <div className=\"row text-muted \">\r\n          <div className=\"card col-2 mx-auto\">\r\n            <div className=\"card-title fs-4\">Total Deaths:</div>\r\n            <div className=\"card-body fw-bold fs-3\">\r\n              {props.totalDatas.deaths}\r\n            </div>\r\n          </div>\r\n          <div className=\"card col-2 mx-auto\">\r\n            <div className=\"card-title fs-4\">Total Tests:</div>\r\n            <div className=\"card-body fw-bold fs-3\">\r\n              {props.totalDatas.tests}\r\n            </div>\r\n          </div>\r\n          <div className=\"card col-2 mx-auto\">\r\n            <div className=\"card-title fs-4\">Total Recovered:</div>\r\n            <div className=\"card-body fw-bold fs-3\">\r\n              {props.totalDatas.recovered}\r\n            </div>\r\n          </div>\r\n          <div className=\"card col-2 mx-auto\">\r\n            <div className=\"card-title fs-4\">Total Cases:</div>\r\n            <div className=\"card-body fw-bold fs-3\">\r\n              {props.totalDatas.cases}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <MapChart setTooltipContent= {setContent} ></MapChart>\r\n\r\n        \r\n        <ReactTooltip id=\"content\">{content}</ReactTooltip> */}\r\n        <Map2 setTooltipContent={setContent} countries = {props.countries} />\r\n\r\n        <ReactTooltip html={true}>{content}</ReactTooltip>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    totalDatas: state.totalDatas,\r\n    countries: state.countries,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import axios from \"axios\"\r\n\r\n\r\n\r\nexport const totalDatas = (totalDatas) => ({\r\n    type: \"SET_TOTAL\",\r\n    totalDatas\r\n\r\n})\r\n\r\nexport const totalDataFromApi = () => {\r\n\r\n    return(dispatch) => {axios.request({\r\n            method: 'GET',\r\n            url: `https://corona.lmao.ninja/v2/all?yesterday=`,\r\n           \r\n          }).then(function (response) {\r\n           \r\n           \r\n            \r\n            dispatch(totalDatas(response.data));\r\n    \r\n        }).catch(function (error) {\r\n            console.error(error);\r\n        })\r\n\r\n\r\n    }\r\n   \r\n}\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            404 - Page Not Found\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst CountryDetails = (props) => {\r\n    \r\n  let country = [];\r\n  country = props.countries.find(\r\n    (country) => country.country === props.match.params.country\r\n  );\r\n\r\n  const onClick = () => {\r\n      props.history.push(\"/latest\")\r\n  }\r\n  \r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-center mt-5 mb-5\" >\r\n      {country && (\r\n          <div className=\"container align-self-center w-50\">\r\n              <div className=\"card\">\r\n          <div className=\"card-header d-flex align-items-center justify-content-center\">\r\n            <h2>{country.country}</h2>\r\n          </div>\r\n          <div className=\"card-body d-flex flex-column\">\r\n              <div className=\"align-self-center\"><img src={country.countryInfo.flag} alt=\"flag\" className=\"thumbnail rounded card-image\"/></div>\r\n            \r\n            <div className=\"container\">\r\n            <div className=\"mt-3 fw-light\">\r\n              <h5>Country Info</h5>\r\n\r\n              <p>Latitude: {country.countryInfo.lat}</p>\r\n              <p>Longitude: {country.countryInfo.long}</p>\r\n              <p>Continent: {country.continent}</p>\r\n              <p>Population: {country.population}</p>\r\n            </div>\r\n            <div className=\"mt-3 fw-light\">\r\n              <h5>Country Today Covid-19 Info</h5>\r\n              <p>Deaths: {country.todayDeaths}</p>\r\n              <p>Cases: {country.todayCases}</p>\r\n              <p>Recovered: {country.todayRecovered}</p>\r\n            </div>\r\n            <div className=\"mt-3 fw-light\">\r\n              <h5>Country Total Covid-19 Info</h5>\r\n              <p>Deaths: {country.deaths}</p>\r\n              <p>Critical: {country.critical}</p>\r\n              <p>Recovered: {country.recovered}</p>\r\n              <p>Tests: {country.tests}</p>\r\n            </div>\r\n            <div className=\"mt-3 fw-light\">\r\n              <h5>Country Per 1 Mln Covid-19 Info</h5>\r\n              <p>Deaths: {country.deathsPerOneMillion}</p>\r\n              <p>Critical: {country.criticalPerOneMillion}</p>\r\n              <p>Recovered: {country.recoveredPerOneMillion}</p>\r\n              <p>Tests: {country.testsPerOneMillion}</p>\r\n            </div>\r\n            <div className=\"mt-3 fw-light\">\r\n              <h5>Country 1 Per People Covid-19 Info</h5>\r\n              <p>Deaths: {country.oneDeathPerPeople}</p>\r\n              <p>Case: {country.oneCasePerPeople}</p>\r\n              <p>Tests: {country.oneTestPerPeople}</p>\r\n            </div>\r\n            </div>\r\n           \r\n          </div>\r\n          <div className=\"card-footer d-grid gap-2\">\r\n            <button onClick={onClick} className=\"btn btn-primary\">Go Back</button>\r\n          </div>\r\n        </div>\r\n          </div>\r\n        \r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    countries: state.countries,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CountryDetails);\r\n","import React from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CountryMap = (props) => {\r\n\r\n    let country = [];\r\n    country = props.countries.find(\r\n      (country) => country.country === props.match.params.country\r\n    );\r\n\r\n    const position = [country.countryInfo.lat,country.countryInfo.long]\r\n\r\n    const onClick = () => {\r\n        props.history.push(\"/latest\")\r\n    }\r\n        \r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"overflow-hidden\">\r\n        {country && position && (\r\n        <MapContainer center={position} zoom={6} scrollWheelZoom={true}>\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <Marker position={position}>\r\n        <Popup>\r\n        {<div>\r\n            <p>{country.country}</p>\r\n            <p>Total Cases: {country.cases}</p>\r\n            <p>Total Deaths: {country.deaths}</p>\r\n            <p>Total critical: {country.critical}</p>\r\n            <p>Total Recovered: {country.recovered}</p>\r\n            <button className=\"btn btn-primary btn-sm\" onClick={onClick}> Go Back</button>\r\n           \r\n            <p></p>\r\n        </div>\r\n        }\r\n      </Popup>\r\n        </Marker>\r\n      </MapContainer>\r\n      )}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        countries: state.countries\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CountryMap);\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"../styles/main.scss\";\r\nimport LatestProjection from \"../components/LatestProjection\";\r\nimport DailyProjection from \"../components/DailyProjection\";\r\nimport Compare from \"../components/Compare\";\r\nimport Header from \"../components/Header\";\r\nimport Home from \"../components/Home\";\r\nimport NotFound from \"../components/NotFound\";\r\nimport CountryDetails from \"../components/CountryDetails\";\r\n\r\nimport CountryMap from \"./../components/CountryMap\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"container  \">\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/latest\" component={LatestProjection} />\r\n          <Route exact path=\"/latest/:country\" component={CountryDetails} />\r\n          <Route exact path=\"/latest/map/:country\" component={CountryMap} />\r\n          <Route exact path=\"/daily\" component={DailyProjection} />\r\n          {/* <Route exact path=\"/daily/:country\" component={DailyCountryDetails} /> */}\r\n          <Route exact path=\"/compare\" component={Compare} />\r\n          <Route exact component={NotFound} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","const countries = []\r\n\r\n\r\nconst covidReducer = (state =countries ,action) =>{\r\n\r\n    switch(action.type){\r\n        case \"SET_COUNTRIES\":\r\n            \r\n            return action.countries;\r\n        \r\n        case \"SEARCH_COUNTRIES\":\r\n\r\n            return  action.countries;\r\n\r\n      \r\n       \r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport default covidReducer;","\r\n    \r\n  const  compareCountries = []\r\n\r\n\r\n\r\nconst compareReducer = (state =compareCountries ,action) =>{\r\n\r\n    switch(action.type){\r\n    \r\n        case \"COMPARE_COUNTRIES\":\r\n            \r\n            \r\n            return  action.compareCountries;\r\n                \r\n        case \"CLEAR_COUNTRIES\":\r\n\r\n            return  []\r\n       \r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport default compareReducer;","    \r\n  const  totalDatas = []\r\n\r\n\r\n\r\n  const totalDataReducer = (state =totalDatas ,action) =>{\r\n  \r\n      switch(action.type){\r\n      \r\n          case \"SET_TOTAL\":\r\n              \r\n              \r\n              return  action.totalDatas;\r\n                  \r\n          \r\n         \r\n          default:\r\n              return state\r\n      }\r\n      \r\n  }\r\n  \r\n  export default totalDataReducer;","\r\nimport { createStore  , compose , applyMiddleware , combineReducers} from 'redux';\r\nimport covidReducer from '../reducers/covidReducer'\r\n\r\nimport thunk from \"redux-thunk\"\r\nimport compareReducer from './../reducers/compareReducer';\r\nimport totalDataReducer from './../reducers/totalDataReducer';\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nexport default function ConfigureStore()  {\r\n    \r\n    const store = createStore(\r\n        combineReducers({countries : covidReducer, compareCountries : compareReducer , totalDatas : totalDataReducer}),composeEnhancers(applyMiddleware(thunk)) );\r\n    \r\n    return store;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport AppRouter from './routers/AppRouter';\nimport { Provider } from 'react-redux';\n\nimport configureStore from './../src/store/configureStore';\nimport { getCountriesFromApi } from './actions/covidDataActions';\n\n\nconst store = configureStore();\n\nif(!store.countries){store.dispatch(getCountriesFromApi())}\n\n\n  ReactDOM.render(\n\n    <Provider store= {store}>\n      <AppRouter />\n    </Provider>\n    \n  ,\n  document.getElementById('root')\n);\n\n\n  \n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}